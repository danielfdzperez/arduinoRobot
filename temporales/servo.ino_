#include <avr/interrupt.h>
#define TOP 20000
volatile int cnt = 90;
void setup() {
 DDRB |= 1 << 2; // Pin 10 Output
 DDRB |= 1 << 5 ; // Pin 13 Output
 TCCR1A =(1 << COM1B1); // output OC1B
 TCCR1B = (1<<WGM13) | (1<<CS11); // PFC with prescaler 8
 TCCR1C = 0;
 ICR1 = TOP;
 OCR1B = 10000; // Duty Cycle 50%
 TIMSK1 = 0; // Deshabilitar interrupciones del timer
 Serial.begin(57600);

}
/** Procedimiento  msToServo: establece el tiempo del pulso
 * que se envía al servo a ms milisegundos.
 */
void msToServo(double ms){
  
  int valor = (int)1500*ms;
  OCR1B = valor;
}
void dutycycle(int cycle){
  OCR1B = TOP*(cycle/100);
}

/** Procedimiento angleToservo: establece el ángulo al que
 * debe moverse y mantener el servo.
 *
 * PRE: Angle en [-90,90]
 */
void angleToServo(double angle){
  msToServo(0.4+((angle + 90)/150));
}
int a = 0;
int sumaa =0;
/**
 * Mueve el servo alternando entre posición 0 y 90º
 */
void loop() {
  angleToServo(a);
  Serial.println(a);
  _delay_ms(1000);
  if(a <= 0){
    sumaa = 90;
  }
  if(a >= 90){
     sumaa = -90;
  }
   a +=sumaa;
}

/* Esta parte no me atrevo a eliminarla pero en teoría debería funcionar */
/* sin ella. */

/* ISR(TIMER1_COMPB_vect){ */
/*    PORTB ^= (1 <<2); */
/* } */
/* ISR(TIMER1_OVF_vect){ */
/*   PORTB ^= (1 << 5); */
/* } */

